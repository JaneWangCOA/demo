{"version":3,"sources":["jquery.js"],"names":["window","jQuery","selectorOrArray","elements","document","querySelectorAll","Array","find","selector","arr","each","node","concat","from","oldApi","fn","i","length","call","parent","indexOf","parentNode","push","children","print","console","log","addClass","className","classList","add","end"],"mappings":";AAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,mDAAA,SAAA,EAAA,GAAA,GAAA,OAAA,YAAA,OAAA,IAAA,uBAAA,OAAA,UAAA,SAAA,KAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,CAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAAA,OAAOC,OAAQ,SAASC,GAClBC,IAAAA,EAOG,MANuB,iBAApBD,EACRC,EAAWC,SAASC,iBAAiBH,GAC9BA,aAA2BI,QAClCH,EAAWD,GAGN,CAELK,KAAKC,SAAAA,GACCC,IAAAA,EAAM,GAQHR,OAJFS,KAAAA,KAAK,SAACC,GACTF,EAAMA,EAAIG,OAAON,MAAMO,KAAKF,EAAKN,iBAAiBG,OAEpDC,EAAIK,OAAS,KACNb,OAAOQ,IAEhBC,KAAKK,SAAAA,GACC,IAAA,IAAIC,EAAE,EAAEA,EAAEb,EAASc,OAAOD,IAC5BD,EAAGG,KAAK,KAAKf,EAASa,GAAGA,GAEpB,OAAA,MAETG,OAAQ,WACAV,IAAAA,EAAM,GAMLR,OALFS,KAAAA,KAAK,SAACC,IAC0B,IAAhCF,EAAIW,QAAQT,EAAKU,aAClBZ,EAAIa,KAAKX,EAAKU,cAGXpB,OAAOQ,IAEhBc,SAAU,WACFd,IAAAA,EAAM,GAMLR,OALFS,KAAAA,KAAK,SAACC,IACwB,IAA9BF,EAAIW,QAAQT,EAAKY,WAClBd,EAAIa,KAAJb,MAAAA,EAAYE,EAAAA,EAAKY,aAGdtB,OAAOQ,IAEhBe,MAAO,WACLC,QAAQC,IAAIvB,IAEdwB,SAASC,SAAAA,GAOA,OAHFlB,KAAAA,KAAK,SAACC,GACTA,EAAKkB,UAAUC,IAAIF,KAEd,MAETd,OAAQZ,EAAgBY,OACxBiB,IAAK,WACI,OAAA,KAAKjB","file":"jquery.aebf4899.js","sourceRoot":"../src","sourcesContent":["window.jQuery= function(selectorOrArray){\n  let elements\n  if(typeof selectorOrArray === 'string'){\n    elements = document.querySelectorAll(selectorOrArray)\n  }else if(selectorOrArray instanceof Array){\n    elements = selectorOrArray\n  }\n  //api操纵elements\n  return {\n    //返回一个可以访问上级作用域的对象\n    find(selector){\n      let arr = []\n      // for(let i=0; i<elements.length;i++){\n      //   arr = arr.concat(Array.from(elements[i].querySelectorAll(selector)))\n      // }\n      this.each((node)=>{\n        arr = arr.concat(Array.from(node.querySelectorAll(selector)))\n      })\n      arr.oldApi = this\n      return jQuery(arr)\n    },\n    each(fn){\n      for(let i=0;i<elements.length;i++){\n        fn.call(null,elements[i],i)\n      }\n      return this\n    },\n    parent(){\n      const arr = []\n      this.each((node)=>{\n        if(arr.indexOf(node.parentNode)===-1){\n          arr.push(node.parentNode)\n        }\n      })\n      return jQuery(arr)\n    },\n    children(){\n      const arr = []\n      this.each((node)=>{\n        if(arr.indexOf(node.children)===-1){\n          arr.push(...node.children)\n        }\n      })\n      return jQuery(arr)\n    },\n    print(){\n      console.log(elements)\n    },\n    addClass(className){\n      // for(let i = 0; i<elements.length;i++){\n      //   elements[i].classList.add(className)\n      // }\n      this.each((node)=>{\n        node.classList.add(className)\n      })\n      return this\n    },\n    oldApi: selectorOrArray.oldApi,\n    end(){\n      return this.oldApi\n    }\n  }\n}"]}